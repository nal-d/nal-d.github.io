{"version":3,"sources":["features/menu/menuSlice.js","app/db.js","features/quest/questSlice.js","app/const_query.js","features/quest/Quest.js","features/item/itemSlice.js","features/item/Item.js","app/router.js","features/menu/Menu.js","features/home/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["menuSlice","createSlice","name","initialState","path","reducers","goto","state","action","payload","actions","currentMenu","menu","initSqlJs","require","_db","undefined","getDB","a","sqlPromise","locateFile","file","dataPromise","fetch","then","res","arrayBuffer","Promise","all","SQL","buf","Database","Uint8Array","getQuestAsync","createAsyncThunk","resolve","reject","db","quests","each","r","id","rewards","push","nr","_","reduce","p","c","qid","A","B","C","D","type","omit","result","chain","mapValues","v","rewards_span","length","values","value","getQuestLvAsync","lvs","lv","questSlice","levels","loading","getQuests","extraReducers","builder","addCase","pending","fulfilled","questList","quest","questLv","isLoading","lastIndex","updateIndex","getItemsAsync","items","itemSlice","getItems","itemList","item","routes","label","component","o_quests","useSelector","useState","setQuests","visible","setVisible","setQuest","dispatch","useDispatch","searchInput","useRef","rewardColumns","title","key","render","direction","ko","jp","dataIndex","Math","floor","percent","columns","filters","map","text","width","onFilter","record","indexOf","color","talk","goal","reward","hrp","responsive","goal2","reward2","hrp2","useEffect","useHotkeys","e","current","focus","cursor","preventDefault","closeModal","style","marginBottom","placeholder","allowClear","onSearch","filter","includes","onKeyDown","keyCode","ctrlKey","ref","dataSource","pagination","rowKey","rowClassName","onRow","q","i","onClick","console","log","scrollToFirstRowOnChange","scroll","y","components","VList","height","onCancel","footer","gutter","span","size","strong","o_items","setItems","Menu","overflow","position","left","defaultSelectedKeys","mode","Item","to","Home","Sider","Layout","Content","App","basename","process","padding","exact","store","configureStore","reducer","menuReducer","questReducer","itemReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8d1a0f5.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  path: '/'\r\n}\r\n\r\nexport const menuSlice = createSlice({\r\n  name: 'menu',\r\n  initialState,\r\n  reducers: {\r\n    goto: (state, action) => {\r\n      state.path = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { goto } = menuSlice.actions\r\n\r\nexport const currentMenu = (state) => state.menu.path\r\n\r\nexport default menuSlice.reducer","import _ from 'lodash';\r\nimport { getItems, getQuestLv, getQuestQuery, getQuestRewards } from './const_query';\r\nconst initSqlJs = require('sql.js');\r\nlet _db = undefined;\r\n\r\nasync function getDB() {\r\n  if (_db !== undefined) return _db\r\n  const sqlPromise = initSqlJs({\r\n    locateFile: file => `/${file}`\r\n  });\r\n  const dataPromise = fetch(\"/mhxx.db\").then(res => res.arrayBuffer());\r\n  const [SQL, buf] = await Promise.all([sqlPromise, dataPromise])\r\n  _db = new SQL.Database(new Uint8Array(buf));\r\n\r\n  return _db\r\n}\r\n\r\nexport function getQuestsFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let quests = {}\r\n    db.each(getQuestQuery,\r\n        (r) => { quests[r.id] = r },\r\n        () => {\r\n          let rewards = []\r\n          db.each(getQuestRewards, \r\n              (r) => rewards.push(r), () => {\r\n                let nr = _.reduce(rewards, (p, c) => {\r\n                  var qid = p[c.id] = p[c.id] || {A: [], B: [], C: [], D: []}\r\n                  var type = qid[c.type] = qid[c.type] || []\r\n\r\n                  type.push(_.omit(c, 'id'))\r\n\r\n                  return p\r\n                }, {})\r\n                \r\n                let result = _.chain(quests).mapValues(v => {\r\n                  v.rewards = nr[v.id]\r\n                  v.rewards_span = 24 / (\r\n                    (v.rewards.A.length > 0 ? 1 : 0) +\r\n                    (v.rewards.B.length > 0 ? 1 : 0) +\r\n                    (v.rewards.C.length > 0 ? 1 : 0) +\r\n                    (v.rewards.D.length > 0 ? 1 : 0))\r\n                  return v\r\n                }).values().value()\r\n\r\n                resolve(result)\r\n              })\r\n        })\r\n    \r\n  })\r\n}\r\n\r\nexport function getQuestLvFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let lvs = []\r\n    db.each(getQuestLv,\r\n      (r) => lvs.push(r.lv), \r\n      () => resolve(lvs))\r\n  })\r\n}\r\n\r\nexport function getItemsFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let items = []\r\n    db.each(getItems, \r\n      (r) => items.push(r), \r\n      () => resolve(items))\r\n  })\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getQuestsFromDB, getQuestLvFromDB } from '../../app/db';\r\n\r\nconst initialState = {\r\n  quests: [],\r\n  levels: [],\r\n  loading: false\r\n}\r\n\r\nexport const getQuestAsync = createAsyncThunk(\r\n  'quests/getQuest',\r\n  async () => {\r\n    const quests = await getQuestsFromDB()\r\n\r\n    return quests\r\n  }\r\n)\r\n\r\nexport const getQuestLvAsync = createAsyncThunk(\r\n  'quests/getQuestLv',\r\n  async () => {\r\n    const lvs = await getQuestLvFromDB()\r\n\r\n    return lvs\r\n  }\r\n)\r\n\r\nexport const questSlice = createSlice({\r\n  name: 'quest',\r\n  initialState,\r\n  reducers: {\r\n    getQuests: (state) => {\r\n      state.quests = []\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getQuestAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getQuestLvAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getQuestAsync.fulfilled, (state, action) => {\r\n        state.quests = action.payload\r\n        state.loading = false\r\n      })\r\n      .addCase(getQuestLvAsync.fulfilled, (state, action) => {\r\n        state.levels = action.payload\r\n        state.loading = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const {getQuests}  = questSlice.actions\r\n\r\nexport const questList = (state) => state.quest.quests\r\nexport const questLv = (state) => state.quest.levels\r\nexport const isLoading = (state) => state.quest.loading\r\n\r\nexport default questSlice.reducer","export const getQuestQuery = `\r\nSELECT \r\n  Q.Qst_ID AS id,\r\n  QN.Qst_Name_4 AS ko, QN.Qst_Name_0 AS en, QN.Qst_Name_3 AS jp,\r\n  Q.QstTalk AS talk, QL.Qst_Lv_4 AS lv, QK.Qst_Key_4 AS key, QT.Qst_Type_4 AS type,\r\n  LN.Loc_Name_4 AS map, G.Qst_Goal_4 AS goal, G2.Qst_Goal2_4 AS goal2,\r\n  Q.Time AS time, Q.Fee AS contract, Q.Reward AS reward,\r\n  Q.HRP AS hrp, Q.Reward2 AS reward2, Q.HRP2 AS hrp2,\r\n  MN1.Mon_Name_4 AS mon1, MN2.Mon_Name_4 AS mon2,\r\n  MN3.Mon_Name_4 AS mon3, MN4.Mon_Name_4 AS mon4, MN5.Mon_Name_4 AS mon5,\r\n  MN6.Mon_Name_4 AS mon6, MN7.Mon_Name_4 AS mon7, MN8.Mon_Name_4 AS mon8\r\nFROM DB_Qst AS Q \r\n  INNER JOIN ID_Qst_Name AS QN ON QN.Qst_ID = Q.Qst_ID \r\n  INNER JOIN ID_Qst_Lv AS QL ON QL.Qst_Lv_ID = Q.Qst_Lv_ID\r\n  INNER JOIN ID_Qst_Key AS QK ON QK.Qst_Key_ID = Q.Qst_Key_ID\r\n  INNER JOIN ID_Qst_Type AS QT ON QT.Qst_Type_ID = Q.Qst_Type_ID\r\n  INNER JOIN ID_Loc_Name AS LN ON LN.Loc_ID = Q.Loc_ID\r\n  INNER JOIN ID_Qst_Goal AS G ON G.Qst_ID = Q.Qst_ID\r\n  INNER JOIN ID_Qst_Goal2 AS G2 ON G2.Qst_ID = Q.Qst_ID\r\n  INNER JOIN ID_Mon_Name AS MN1 ON MN1.Mon_ID = Q.Mon1_ID\r\n  INNER JOIN ID_Mon_Name AS MN2 ON MN2.Mon_ID = Q.Mon2_ID\r\n  INNER JOIN ID_Mon_Name AS MN3 ON MN3.Mon_ID = Q.Mon3_ID\r\n  INNER JOIN ID_Mon_Name AS MN4 ON MN4.Mon_ID = Q.Mon4_ID\r\n  INNER JOIN ID_Mon_Name AS MN5 ON MN5.Mon_ID = Q.Mon5_ID\r\n  INNER JOIN ID_Mon_Name AS MN6 ON MN6.Mon_ID = Q.Mon6_ID\r\n  INNER JOIN ID_Mon_Name AS MN7 ON MN7.Mon_ID = Q.Mon7_ID\r\n  INNER JOIN ID_Mon_Name AS MN8 ON MN8.Mon_ID = Q.Mon8_ID`\r\n\r\nexport const getQuestRewards = `\r\nSELECT\r\n  IQ.Qst_ID AS id, IQ.ID AS key_id, Itm_Name_4 AS ko, Itm_Name_3 AS jp, \r\n  Itm_Name_0 AS en, IQ.Qty AS qty, IQ.Pct as percent, IQ.Type AS type\r\nFROM DB_ItmtoQst AS IQ \r\n  INNER JOIN ID_Itm_Name AS I ON I.Itm_ID = IQ.Itm_ID`\r\n\r\nexport const getQuestLv = `\r\nSELECT \r\n  DISTINCT QL.Qst_Lv_4 AS lv \r\nFROM DB_Qst AS Q\r\n  INNER JOIN ID_Qst_Lv AS QL ON QL.Qst_Lv_ID = Q.Qst_Lv_ID\r\n  ORDER BY Q.Qst_Lv_ID`\r\n\r\nexport const getItems = `\r\nSELECT \r\n\tITN.Itm_Name_4 AS ko, ITN.Itm_Name_3 AS jp, ITN.Itm_Name_0 AS en,\r\n\tI.Rare AS rare, I.Max AS max, I.Sell AS sell, I.Buy AS buy\r\nFROM DB_Itm AS I\r\n\tINNER JOIN ID_Itm_Name AS ITN ON ITN.Itm_ID = I.Itm_ID`","import { Button, Col, Modal, Row, Space, Table, Tag } from \"antd\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getQuestAsync, getQuestLvAsync, isLoading, questList, questLv } from \"./questSlice\"\r\nimport { VList } from 'virtual-table-ant-design'\r\nimport Search from \"antd/lib/input/Search\"\r\nimport { useHotkeys } from 'react-hotkeys-hook'\r\n\r\nlet lastIndex = 0\r\nconst updateIndex = () => {\r\n  lastIndex++\r\n  return lastIndex\r\n}\r\n\r\nexport default function Quest() {\r\n  const o_quests = useSelector(questList)\r\n  const [quests, setQuests] = useState(o_quests)\r\n  const [visible, setVisible] = useState(false)\r\n  const [quest, setQuest] = useState({})\r\n  const loading = useSelector(isLoading)\r\n  const levels = useSelector(questLv)\r\n  const dispatch = useDispatch()\r\n  const searchInput = useRef()\r\n\r\n  const rewardColumns = [\r\n    { \r\n      title: '아이템', \r\n      key: `rItem${updateIndex()}`, \r\n      render: (_, r) => <Space direction=\"vertical\"><Text>{r.ko}</Text><Text type=\"secondary\">{r.jp}</Text></Space>\r\n    },\r\n    {\r\n      title: '수량',\r\n      key:`rQty${updateIndex()}`,\r\n      dataIndex: 'qty',\r\n    },\r\n    {\r\n      title: '확률',\r\n      key: `rPerc${updateIndex()}`,\r\n      render: (_,r) => Math.floor(r.percent * 100) + '%'\r\n    }\r\n  ]\r\n\r\n  const columns = [\r\n    {\r\n      title: '레벨',\r\n      key: `lv${updateIndex()}`,\r\n      dataIndex: 'lv',\r\n      filters: levels.map(v => {\r\n        return {\r\n          text: v,\r\n          value: v\r\n        }\r\n      }),\r\n      width: 120,\r\n      onFilter: (value, record) => record.lv.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: '퀘스트',\r\n      key: `name${updateIndex()}`,\r\n      render: (_, r) => \r\n        <Space direction=\"vertical\">\r\n          <div>\r\n            <Tag color=\"green\">{r.type}</Tag>\r\n            { r.key && <Tag color=\"red\">{r.key}</Tag> }\r\n            { r.talk !== 0 && <Tag color=\"gold\">대화</Tag> }\r\n          </div>\r\n          <Text>{r.ko}</Text>\r\n          <Text type=\"secondary\">{r.jp}</Text>\r\n        </Space>,\r\n      filters: [\r\n        {text: '긴급', value: '긴급' },\r\n        {text: '키', value: '키' }\r\n      ],\r\n      onFilter: (value, record) => record.key === value\r\n    },\r\n    {\r\n      title: '맵',\r\n      key: `map${updateIndex()}`,\r\n      dataIndex: 'map',\r\n      width: 150\r\n    },\r\n    {\r\n      title: '메인 타겟',\r\n      key: `goal${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.goal}</Text>\r\n        <Text type=\"secondary\">보수: {r.reward}z / {r.reward / 10}pt / {r.hrp}HRP</Text>\r\n      </Space>,\r\n      width: 500,\r\n      responsive: ['xxl']\r\n    },\r\n    {\r\n      title: '서브 타겟',\r\n      key: `goal2${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.goal2}</Text>\r\n        { r.goal2 !== '없음' && <Text type=\"secondary\">보수: {r.reward2}z / {r.reward2 / 10}pt / {r.hrp2}HRP</Text> }\r\n        \r\n      </Space>,\r\n      width: 500,\r\n      responsive: ['xxl']\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestLvAsync())\r\n    dispatch(getQuestAsync())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    setQuests(o_quests)\r\n  }, [o_quests])\r\n\r\n  const onSearch = (value) => {\r\n    setQuests(o_quests.filter(v => v.ko.includes(value)))\r\n  }\r\n\r\n  useHotkeys('ctrl+f', (e) => {\r\n    searchInput.current.focus({\r\n      cursor: 'all',\r\n    })\r\n    e.preventDefault();  \r\n  });\r\n\r\n  const onRow = (q, i) => {\r\n    return {\r\n      onClick: (e) => {\r\n        console.log(q)\r\n        setQuest(q)\r\n        setVisible(true)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onKeyDownSearch = (e) => {\r\n    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {        \r\n        e.preventDefault();         \r\n        searchInput.current.focus({\r\n          cursor: 'all',\r\n        })   \r\n    }    \r\n  }\r\n\r\n  const closeModal = () => {\r\n    setQuest({})\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Search placeholder=\"퀘스트 명 검색\" \r\n          allowClear onSearch={onSearch} style={{ width: 400 }} \r\n          onKeyDown={onKeyDownSearch}\r\n          ref={searchInput}/>\r\n      </Space>\r\n      <Table columns={columns} dataSource={quests} pagination={false} \r\n      loading={loading}\r\n      rowKey='id' \r\n      rowClassName='more_detail'\r\n      onRow={onRow}\r\n      scrollToFirstRowOnChange={true}\r\n      scroll={{ y: '80vh' }}\r\n      components={VList({\r\n        height: 1000,\r\n      })}/>\r\n      <Modal width='50vw' visible={visible} title=\"퀘스트 상세\" onCancel={closeModal} footer= {[\r\n        <Button key=\"close\" onClick={closeModal}>\r\n          닫기\r\n        </Button>\r\n      ]}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={16}>\r\n            <Space direction=\"vertical\">\r\n              <Space size={20}>\r\n                <Text strong>퀘스트 이름</Text>\r\n                <div>\r\n                  <Tag color=\"green\">{quest.type}</Tag>\r\n                  { quest.key && <Tag color=\"red\">{quest.key}</Tag> }\r\n                  { quest.talk !== 0 && <Tag color=\"gold\">대화</Tag> }\r\n                </div>\r\n              </Space>\r\n              \r\n              <Text>{quest.lv}&nbsp;&nbsp;&nbsp;&nbsp;{quest.ko} / {quest.jp}</Text>\r\n            </Space>\r\n          </Col>\r\n          <Col span={8}> \r\n            <Space direction=\"vertical\">\r\n              <Text strong>맵</Text>\r\n              <Text>{quest.map}</Text>\r\n            </Space>\r\n          </Col>\r\n\r\n          <Col span={12}>\r\n            <Space direction=\"vertical\">\r\n              <Text strong>메인 타겟</Text>\r\n              <Text>{quest.goal}</Text>\r\n              <Text type=\"secondary\">보수: {quest.reward}z / {quest.reward / 10}pt / {quest.hrp}HRP</Text>\r\n            </Space>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Space direction=\"vertical\" >\r\n              <Text strong>서브 타겟 </Text>\r\n              <Text>{quest.goal2}</Text>\r\n              <Text type=\"secondary\">보수: {quest.reward2}z / {quest.reward2 / 10}pt / {quest.hrp2}HRP</Text>\r\n            </Space>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Text strong>퀘스트 보수</Text>\r\n          </Col>\r\n          { quest.rewards && quest.rewards.A && quest.rewards.A.length > 0 && <Col span={quest.rewards_span}><Table size=\"small\" columns={rewardColumns} dataSource={quest.rewards.A} pagination={false}/></Col>}\r\n          { quest.rewards && quest.rewards.B && quest.rewards.B.length > 0 && <Col span={quest.rewards_span}><Table size=\"small\" columns={rewardColumns} dataSource={quest.rewards.B} pagination={false}/></Col>}\r\n          { quest.rewards && quest.rewards.C && quest.rewards.C.length > 0 && <Col span={quest.rewards_span}><Table size=\"small\" columns={rewardColumns} dataSource={quest.rewards.C} pagination={false}/></Col>}\r\n          { quest.rewards && quest.rewards.D && quest.rewards.D.length > 0 && <Col span={quest.rewards_span}><Table size=\"small\" columns={rewardColumns} dataSource={quest.rewards.D} pagination={false}/></Col>}\r\n        </Row>\r\n       \r\n      </Modal>\r\n    </>\r\n  )\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getItemsFromDB } from '../../app/db';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nexport const getItemsAsync = createAsyncThunk(\r\n  'quests/getQuest',\r\n  async () => {\r\n    const quests = await getItemsFromDB()\r\n\r\n    return quests\r\n  }\r\n)\r\n\r\nexport const itemSlice = createSlice({\r\n  name: 'item',\r\n  initialState,\r\n  reducers: {\r\n    getItems: (state) => {\r\n      state.items = []\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getItemsAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getItemsAsync.fulfilled, (state, action) => {\r\n        state.items = action.payload\r\n        state.loading = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const { getItems }  = itemSlice.actions\r\n\r\nexport const itemList = (state) => state.item.items\r\nexport const isLoading = (state) => state.item.loading\r\n\r\nexport default itemSlice.reducer","import { Space, Table } from \"antd\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { VList } from 'virtual-table-ant-design'\r\nimport Search from \"antd/lib/input/Search\"\r\nimport { useHotkeys } from 'react-hotkeys-hook'\r\nimport { getItemsAsync, isLoading, itemList } from \"./itemSlice\"\r\n\r\nlet lastIndex = 0\r\nconst updateIndex = () => {\r\n  lastIndex++\r\n  return lastIndex\r\n}\r\n\r\nexport default function Quest() {\r\n  const o_items = useSelector(itemList)\r\n  const [items, setItems] = useState(o_items)\r\n  const loading = useSelector(isLoading)\r\n  const dispatch = useDispatch()\r\n  const searchInput = useRef()\r\n\r\n  const columns = [\r\n    {\r\n      title: '아이템',\r\n      key: `item${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.ko}</Text>\r\n        <Text type=\"secondary\">{r.jp}</Text>\r\n      </Space>,\r\n    },\r\n    {\r\n      title: '레어도',\r\n      key: `rare${updateIndex()}`,\r\n      dataIndex: 'rare'\r\n    },\r\n    {\r\n      title: '최대 소지 수',\r\n      key: `max${updateIndex()}`,\r\n      dataIndex: 'max'\r\n    },\r\n    {\r\n      title: '판매가',\r\n      key: `sell${updateIndex()}`,\r\n      dataIndex: 'sell'\r\n    },\r\n    {\r\n      title: '구매가',\r\n      key: `buy${updateIndex()}`,\r\n      dataIndex: 'buy'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getItemsAsync())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    setItems(o_items)\r\n  }, [o_items])\r\n\r\n  const onSearch = (value) => {\r\n    setItems(o_items.filter(v => v.ko.includes(value)))\r\n  }\r\n  useHotkeys('ctrl+f', (e) => {\r\n    searchInput.current.focus({\r\n      cursor: 'all',\r\n    })\r\n    e.preventDefault();  \r\n  });\r\n  const onKeyDownSearch = (e) => {\r\n    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {        \r\n        e.preventDefault();         \r\n        searchInput.current.focus({\r\n          cursor: 'all',\r\n        })   \r\n    }    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Search placeholder=\"아이템 명 검색\" \r\n          allowClear onSearch={onSearch} style={{ width: 400 }} \r\n          onKeyDown={onKeyDownSearch}\r\n          ref={searchInput}/>\r\n      </Space>\r\n      <Table columns={columns} dataSource={items} pagination={false} \r\n      loading={loading}\r\n      rowKey='id' \r\n      scrollToFirstRowOnChange={true}\r\n      scroll={{ y: '80vh' }}\r\n      components={VList({\r\n        height: 1000,\r\n      })}/>\r\n    </>\r\n  )\r\n}","import Quest from \"../features/quest/Quest\";\r\nimport Item from '../features/item/Item';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/quests',\r\n    label: '퀘스트',\r\n    component: Quest\r\n  },\r\n  {\r\n    path: '/items',\r\n    label: '아이템',\r\n    component: Item\r\n  }\r\n]\r\n\r\nexport default routes;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { currentMenu, goto } from \"./menuSlice\";\r\nimport {Menu as AntdMenu} from \"antd\";\r\nimport routes from \"../../app/router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function Menu() {\r\n  const current = useSelector(currentMenu);\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (e) => {\r\n    console.log(e)\r\n    dispatch(goto(e.key))\r\n  }\r\n\r\n  return (\r\n    <AntdMenu \r\n      style={{\r\n        overflow: 'hidden',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        width: '201px',\r\n        left: 0,\r\n      }}\r\n      onClick={handleClick}\r\n      defaultSelectedKeys={[current]}\r\n      mode=\"inline\">\r\n        {routes.map(v => <AntdMenu.Item key={'mitm'+v.path}>\r\n          <Link to={v.path} key={'link'+v.path}>\r\n            {v.label}\r\n          </Link>\r\n        </AntdMenu.Item>)}\r\n    </AntdMenu>\r\n  )\r\n}","export default function Home() {\r\n  return (\r\n    <div>\r\n      Home\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { Layout } from 'antd';\nimport { Menu } from './features/menu/Menu';\nimport { Route, Switch } from 'react-router';\nimport Home from './features/home/Home';\nimport routes from './app/router';\nimport { HashRouter as Router } from 'react-router-dom'\nimport './App.css'\n\nconst { Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Sider>\n          <Menu/>\n        </Sider>\n        <Layout>\n          <Content style={{ padding: '24px' }}>\n              <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                {routes.map(v => <Route exact path={v.path} component={v.component} key={'rt'+v.path}/> )}\n              </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport menuReducer from '../features/menu/menuSlice';\nimport questReducer from '../features/quest/questSlice';\nimport itemReducer from '../features/item/itemSlice';\n\nexport const store = configureStore({\n  reducer: {\n    menu: menuReducer,\n    quest: questReducer,\n    item: itemReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}