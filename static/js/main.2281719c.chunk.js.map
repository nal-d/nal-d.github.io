{"version":3,"sources":["features/menu/menuSlice.js","app/db.js","features/quest/questSlice.js","app/const_query.js","features/quest/Quest.js","features/item/itemSlice.js","features/item/Item.js","app/router.js","features/menu/Menu.js","features/home/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["menuSlice","createSlice","name","initialState","path","reducers","goto","state","action","payload","actions","currentMenu","menu","initSqlJs","require","_db","undefined","getDB","a","sqlPromise","locateFile","file","dataPromise","fetch","then","res","arrayBuffer","Promise","all","SQL","buf","Database","Uint8Array","getQuestAsync","createAsyncThunk","resolve","reject","db","quests","each","r","id","rewards","push","nr","_","reduce","p","c","qid","A","B","C","D","type","omit","result","chain","mapValues","v","zipWith","map","mapKeys","k","value","b","merge","values","getQuestLvAsync","lvs","lv","questSlice","levels","loading","getQuests","extraReducers","builder","addCase","pending","fulfilled","questList","quest","questLv","isLoading","lastIndex","updateIndex","getItemsAsync","items","itemSlice","getItems","itemList","item","routes","label","component","o_quests","useSelector","useState","setQuest","dispatch","useDispatch","searchInput","useRef","columns","title","key","render","rewardColumns","children","direction","ko_A","jp_A","dataIndex","ko_B","jp_B","ko_C","jp_C","ko_D","jp_D","content","dataSource","rowKey","size","pagination","placement","trigger","InfoCircleOutlined","width","filters","text","onFilter","record","indexOf","color","talk","ko","jp","goal","reward","hrp","responsive","goal2","reward2","hrp2","useEffect","useHotkeys","e","current","focus","cursor","preventDefault","style","marginBottom","placeholder","allowClear","onSearch","filter","includes","onKeyDown","keyCode","ctrlKey","ref","scrollToFirstRowOnChange","scroll","y","components","VList","height","o_items","setItems","Menu","overflow","position","left","onClick","console","log","defaultSelectedKeys","mode","Item","to","Home","Sider","Layout","Content","App","padding","exact","store","configureStore","reducer","menuReducer","questReducer","itemReducer","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oXAMaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aANmB,CACnBC,KAAM,KAMNC,SAAU,CACRC,KAAM,SAACC,EAAOC,GACZD,EAAMH,KAAOI,EAAOC,YAKXH,EAASN,EAAUU,QAAnBJ,KAEFK,EAAc,SAACJ,GAAD,OAAWA,EAAMK,KAAKR,MAElCJ,IAAf,Q,gHClBMa,EAAYC,EAAQ,KACtBC,OAAMC,E,SAEKC,I,2EAAf,sCAAAC,EAAA,8DACcF,IAARD,EADN,yCACgCA,GADhC,cAEQI,EAAaN,EAAU,CAC3BO,WAAY,SAAAC,GAAI,iBAAQA,MAEpBC,EAAcC,MAAM,YAAYC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,iBALxD,SAM2BC,QAAQC,IAAI,CAACT,EAAYG,IANpD,0CAMSO,EANT,KAMcC,EANd,KAOEf,EAAM,IAAIc,EAAIE,SAAS,IAAIC,WAAWF,IAPxC,kBASSf,GATT,6C,sBCFA,IAMakB,EAAgBC,YAC3B,kBAD2C,sBAE3C,4BAAAhB,EAAA,sEDOO,IAAIS,QAAJ,uCAAY,WAAOQ,EAASC,GAAhB,iBAAAlB,EAAA,sEACAD,IADA,OACXoB,EADW,OAEbC,EAAS,GACbD,EAAGE,KErBmB,g8CFsBlB,SAACC,GAAQF,EAAOE,EAAEC,IAAMD,KACxB,WACE,IAAIE,EAAU,GACdL,EAAGE,KEGe,6OFFd,SAACC,GAAD,OAAOE,EAAQC,KAAKH,MAAI,WACtB,IAAII,EAAKC,IAAEC,OAAOJ,GAAS,SAACK,EAAGC,GAC7B,IAAIC,EAAMF,EAAEC,EAAEP,IAAMM,EAAEC,EAAEP,KAAO,CAACS,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAKxD,OAJWJ,EAAID,EAAEM,MAAQL,EAAID,EAAEM,OAAS,IAEnCX,KAAKE,IAAEU,KAAKP,EAAG,OAEbD,IACN,IAECS,EAASX,IAAEY,MAAMnB,GAAQoB,WAAU,SAAAC,GAQrC,OAPAA,EAAEjB,QAAUG,IAAEe,QACAf,IAAEY,MAAMb,EAAGe,EAAElB,IAAIS,GAAGW,KAAI,SAAAF,GAAC,OAAId,IAAEiB,QAAQH,GAAG,SAACd,EAAGkB,GAAJ,OAAUA,EAAI,WAAOC,QAC/DnB,IAAEY,MAAMb,EAAGe,EAAElB,IAAIU,GAAGU,KAAI,SAAAF,GAAC,OAAId,IAAEiB,QAAQH,GAAG,SAACd,EAAGkB,GAAJ,OAAUA,EAAI,WAAOC,QAC/DnB,IAAEY,MAAMb,EAAGe,EAAElB,IAAIW,GAAGS,KAAI,SAAAF,GAAC,OAAId,IAAEiB,QAAQH,GAAG,SAACd,EAAGkB,GAAJ,OAAUA,EAAI,WAAOC,SAC/D,SAAC9C,EAAE+C,EAAEjB,GACH,OAAOH,IAAEqB,MAAMhD,EAAE+C,EAAEjB,MAE5BW,KACNQ,SAASH,QAEZ7B,EAAQqB,SA7BH,2CAAZ,yDCPP,cACQlB,EADR,yBAGSA,GAHT,4CAOW8B,EAAkBlC,YAC7B,oBAD6C,sBAE7C,4BAAAhB,EAAA,sEDmCO,IAAIS,QAAJ,uCAAY,WAAOQ,EAASC,GAAhB,iBAAAlB,EAAA,sEACAD,IADA,OACXoB,EADW,OAEbgC,EAAM,GACVhC,EAAGE,KEvBgB,kJFwBjB,SAACC,GAAD,OAAO6B,EAAI1B,KAAKH,EAAE8B,OAClB,kBAAMnC,EAAQkC,MALC,2CAAZ,yDCnCP,cACQA,EADR,yBAGSA,GAHT,4CAOWE,EAAatE,YAAY,CACpCC,KAAM,QACNC,aA1BmB,CACnBmC,OAAQ,GACRkC,OAAQ,GACRC,SAAS,GAwBTpE,SAAU,CACRqE,UAAW,SAACnE,GACVA,EAAM+B,OAAS,KAGnBqC,cAAe,SAACC,GACdA,EACGC,QAAQ5C,EAAc6C,SAAS,SAACvE,GAC/BA,EAAMkE,SAAU,KAEjBI,QAAQT,EAAgBU,SAAS,SAACvE,GACjCA,EAAMkE,SAAU,KAEjBI,QAAQ5C,EAAc8C,WAAW,SAACxE,EAAOC,GACxCD,EAAM+B,OAAS9B,EAAOC,QACtBF,EAAMkE,SAAU,KAEjBI,QAAQT,EAAgBW,WAAW,SAACxE,EAAOC,GAC1CD,EAAMiE,OAAShE,EAAOC,QACtBF,EAAMkE,SAAU,QAOXO,GAFeT,EAAW7D,QAAzBgE,UAEW,SAACnE,GAAD,OAAWA,EAAM0E,MAAM3C,SACnC4C,EAAU,SAAC3E,GAAD,OAAWA,EAAM0E,MAAMT,QACjCW,EAAY,SAAC5E,GAAD,OAAWA,EAAM0E,MAAMR,SAEjCF,IAAf,Q,oDElDIa,EAAY,EACVC,EAAc,WAElB,QADAD,GCTF,IAKaE,EAAgBpD,YAC3B,kBAD2C,sBAE3C,4BAAAhB,EAAA,sEJuDO,IAAIS,QAAJ,uCAAY,WAAOQ,EAASC,GAAhB,iBAAAlB,EAAA,sEACAD,IADA,OACXoB,EADW,OAEbkD,EAAQ,GACZlD,EAAGE,KE1Bc,4NF2Bf,SAACC,GAAD,OAAO+C,EAAM5C,KAAKH,MAClB,kBAAML,EAAQoD,MALC,2CAAZ,yDIvDP,cACQjD,EADR,yBAGSA,GAHT,4CAOWkD,EAAYvF,YAAY,CACnCC,KAAM,OACNC,aAhBmB,CACnBoF,MAAO,GACPd,SAAS,GAeTpE,SAAU,CACRoF,SAAU,SAAClF,GACTA,EAAMgF,MAAQ,KAGlBZ,cAAe,SAACC,GACdA,EACGC,QAAQS,EAAcR,SAAS,SAACvE,GAC/BA,EAAMkE,SAAU,KAEjBI,QAAQS,EAAcP,WAAW,SAACxE,EAAOC,GACxCD,EAAMgF,MAAQ/E,EAAOC,QACrBF,EAAMkE,SAAU,QAOXiB,GAFgBF,EAAU9E,QAAxB+E,SAES,SAAClF,GAAD,OAAWA,EAAMoF,KAAKJ,QACjCJ,EAAY,SAAC5E,GAAD,OAAWA,EAAMoF,KAAKlB,SAEhCe,IAAf,QChCIJ,EAAY,EACVC,EAAc,WAElB,QADAD,GCTF,IAaeQ,EAbA,CACb,CACExF,KAAM,UACNyF,MAAO,qBACPC,UHSW,WACb,IAAMC,EAAWC,YAAYhB,GADC,EAEHiB,mBAASF,GAFN,mBAEvBzD,EAFuB,KAEf4D,EAFe,KAGxBzB,EAAUuB,YAAYb,GACtBX,EAASwB,YAAYd,GACrBiB,EAAWC,cACXC,EAAcC,mBAIdC,EAAU,CACd,CACEC,MAAO,GACPC,IAAI,SAAD,OAAWpB,KACdqB,OAAQ,SAAC7D,EAAGL,GACV,IAAImE,EAAgB,CAClB,CACEH,MAAO,kEACPC,IAAI,WAAD,OAAapB,KAChBuB,SAAU,CACR,CACEJ,MAAO,qBACPC,IAAI,SAAD,OAAWpB,KACdqB,OAAQ,SAAC7D,EAAGL,GAAJ,OACN,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UACE,cAAC,IAAD,UAAOrE,EAAEsE,OACT,cAAC,IAAD,CAAMxD,KAAK,YAAX,SAAwBd,EAAEuE,YAGhC,CACEP,MAAO,eACPC,IAAI,QAAD,OAAUpB,KACb2B,UAAW,SAEb,CACER,MAAO,eACPC,IAAI,YAAD,OAAcpB,KACjB2B,UAAW,eAIjB,CACER,MAAO,kEACPC,IAAI,WAAD,OAAapB,KAChBuB,SAAU,CACR,CACEJ,MAAO,qBACPC,IAAI,SAAD,OAAWpB,KACdqB,OAAQ,SAAC7D,EAAGL,GAAJ,OACN,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UACE,cAAC,IAAD,UAAOrE,EAAEyE,OACT,cAAC,IAAD,CAAM3D,KAAK,YAAX,SAAwBd,EAAE0E,YAGhC,CACEV,MAAO,eACPC,IAAI,QAAD,OAAUpB,KACb2B,UAAW,SAEb,CACER,MAAO,eACPC,IAAI,YAAD,OAAcpB,KACjB2B,UAAW,eAIjB,CACER,MAAO,8CACPC,IAAI,WAAD,OAAapB,KAChBuB,SAAU,CACR,CACEJ,MAAO,qBACPC,IAAI,SAAD,OAAWpB,KACdqB,OAAQ,SAAC7D,EAAGL,GAAJ,OACN,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UACE,cAAC,IAAD,UAAOrE,EAAE2E,OACT,cAAC,IAAD,CAAM7D,KAAK,YAAX,SAAwBd,EAAE4E,YAGhC,CACEZ,MAAO,eACPC,IAAI,QAAD,OAAUpB,KACb2B,UAAW,SAEb,CACER,MAAO,eACPC,IAAI,YAAD,OAAcpB,KACjB2B,UAAW,eAIjB,CACER,MAAO,kEACPC,IAAI,WAAD,OAAapB,KAChBuB,SAAU,CACR,CACEJ,MAAO,qBACPC,IAAI,SAAD,OAAWpB,KACdqB,OAAQ,SAAC7D,EAAGL,GAAJ,OACN,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UACE,cAAC,IAAD,UAAOrE,EAAE6E,OACT,cAAC,IAAD,CAAM/D,KAAK,YAAX,SAAwBd,EAAE8E,YAGhC,CACEd,MAAO,eACPC,IAAI,QAAD,OAAUpB,KACb2B,UAAW,SAEb,CACER,MAAO,eACPC,IAAI,YAAD,OAAcpB,KACjB2B,UAAW,gBAOnB,OAAQ,cAAC,IAAD,CAASR,MAAM,kCAASe,QAC5B,cAAC,IAAD,CACEC,WAAYhF,EAAEE,QACd6D,QAASI,EACTc,OAAQ,+BAAapC,MACrBqC,KAAK,QACLC,YAAY,IACdC,UAAU,QACVC,QAAQ,QARJ,SASN,cAACC,EAAA,EAAD,OAGJC,MAAO,IAET,CACEvB,MAAO,eACPC,IAAI,KAAD,OAAOpB,KACV2B,UAAW,KACXgB,QAASxD,EAAOX,KAAI,SAAAF,GAClB,MAAO,CACLsE,KAAMtE,EACNK,MAAOL,MAGXoE,MAAO,IACPG,SAAU,SAAClE,EAAOmE,GAAR,OAAgD,IAA7BA,EAAO7D,GAAG8D,QAAQpE,KAEjD,CACEwC,MAAO,qBACPC,IAAI,OAAD,OAASpB,KACZqB,OAAQ,SAAC7D,EAAGL,GAAJ,OAAU,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UAChB,gCACE,cAAC,IAAD,CAAKwB,MAAM,QAAX,SAAoB7F,EAAEc,OACpBd,EAAEiE,KAAO,cAAC,IAAD,CAAK4B,MAAM,MAAX,SAAkB7F,EAAEiE,MAClB,IAAXjE,EAAE8F,MAAc,cAAC,IAAD,CAAKD,MAAM,OAAX,6BAEpB,cAAC,IAAD,UAAO7F,EAAE+F,KACT,cAAC,IAAD,CAAMjF,KAAK,YAAX,SAAwBd,EAAEgG,SAE5BR,QAAS,CACP,CAACC,KAAM,eAAMjE,MAAO,gBACpB,CAACiE,KAAM,SAAKjE,MAAO,WAErBkE,SAAU,SAAClE,EAAOmE,GAAR,OAAmBA,EAAO1B,MAAQzC,IAE9C,CACEwC,MAAO,SACPC,IAAI,MAAD,OAAQpB,KACX2B,UAAW,MACXe,MAAO,KAET,CACEvB,MAAO,4BACPC,IAAI,OAAD,OAASpB,KACZqB,OAAQ,SAAC7D,EAAGL,GAAJ,OAAU,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UAChB,cAAC,IAAD,UAAOrE,EAAEiG,OACT,eAAC,IAAD,CAAMnF,KAAK,YAAX,2BAA4Bd,EAAEkG,OAA9B,OAA0ClG,EAAEkG,OAAS,GAArD,QAA8DlG,EAAEmG,IAAhE,aAEFZ,MAAO,IACPa,WAAY,CAAC,QAEf,CACEpC,MAAO,4BACPC,IAAI,QAAD,OAAUpB,KACbqB,OAAQ,SAAC7D,EAAGL,GAAJ,OAAU,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UAChB,cAAC,IAAD,UAAOrE,EAAEqG,QACK,iBAAZrG,EAAEqG,OAAkB,eAAC,IAAD,CAAMvF,KAAK,YAAX,2BAA4Bd,EAAEsG,QAA9B,OAA2CtG,EAAEsG,QAAU,GAAvD,QAAgEtG,EAAEuG,KAAlE,aAGxBhB,MAAO,IACPa,WAAY,CAAC,SA+BjB,OA3BAI,qBAAU,WACR7C,EAAS/B,KACT+B,EAASlE,OACR,CAACkE,IAEJ6C,qBAAU,WACR9C,EAASH,KACR,CAACA,IAKJkD,YAAW,UAAU,SAACC,GACpB7C,EAAY8C,QAAQC,MAAM,CACxBC,OAAQ,QAEVH,EAAEI,oBAYF,qCACE,cAAC,IAAD,CAAOC,MAAO,CAAEC,aAAc,IAA9B,SACE,cAAC,IAAD,CAAQC,YAAY,yCAClBC,YAAU,EAACC,SAtBF,SAAC3F,GAChBkC,EAASH,EAAS6D,QAAO,SAAAjG,GAAC,OAAIA,EAAE4E,GAAGsB,SAAS7F,QAqBPuF,MAAO,CAAExB,MAAO,KAC/C+B,UAdgB,SAACZ,IACL,MAAdA,EAAEa,SAAoBb,EAAEc,SAAyB,KAAdd,EAAEa,WACrCb,EAAEI,iBACFjD,EAAY8C,QAAQC,MAAM,CACxBC,OAAQ,UAWRY,IAAK5D,MAET,cAAC,IAAD,CAAOE,QAASA,EAASiB,WAAYlF,EAAQqF,YAAY,EACzDlD,QAASA,EACTgD,OAAO,KACPyC,0BAA0B,EAC1BC,OAAQ,CAAEC,EAAG,QACbC,WAAYC,YAAM,CAChBC,OAAQ,aGjPd,CACEnK,KAAM,SACNyF,MAAO,qBACPC,UDIW,WACb,IAAM0E,EAAUxE,YAAYN,GADE,EAEJO,mBAASuE,GAFL,mBAEvBjF,EAFuB,KAEhBkF,EAFgB,KAGxBhG,EAAUuB,YAAYb,GACtBgB,EAAWC,cACXC,EAAcC,mBAEdC,EAAU,CACd,CACEC,MAAO,qBACPC,IAAI,OAAD,OAASpB,KACZqB,OAAQ,SAAC7D,EAAGL,GAAJ,OAAU,eAAC,IAAD,CAAOqE,UAAU,WAAjB,UAChB,cAAC,IAAD,UAAOrE,EAAE+F,KACT,cAAC,IAAD,CAAMjF,KAAK,YAAX,SAAwBd,EAAEgG,UAG9B,CACEhC,MAAO,qBACPC,IAAI,OAAD,OAASpB,KACZ2B,UAAW,QAEb,CACER,MAAO,mCACPC,IAAI,MAAD,OAAQpB,KACX2B,UAAW,OAEb,CACER,MAAO,qBACPC,IAAI,OAAD,OAASpB,KACZ2B,UAAW,QAEb,CACER,MAAO,qBACPC,IAAI,MAAD,OAAQpB,KACX2B,UAAW,QA8Bf,OA1BAgC,qBAAU,WACR7C,EAASb,OACR,CAACa,IAEJ6C,qBAAU,WACRyB,EAASD,KACR,CAACA,IAKJvB,YAAW,UAAU,SAACC,GACpB7C,EAAY8C,QAAQC,MAAM,CACxBC,OAAQ,QAEVH,EAAEI,oBAYF,qCACE,cAAC,IAAD,CAAOC,MAAO,CAAEC,aAAc,IAA9B,SACE,cAAC,IAAD,CAAQC,YAAY,yCAClBC,YAAU,EAACC,SAtBF,SAAC3F,GAChByG,EAASD,EAAQZ,QAAO,SAAAjG,GAAC,OAAIA,EAAE4E,GAAGsB,SAAS7F,QAqBNuF,MAAO,CAAExB,MAAO,KAC/C+B,UAdgB,SAACZ,IACL,MAAdA,EAAEa,SAAoBb,EAAEc,SAAyB,KAAdd,EAAEa,WACrCb,EAAEI,iBACFjD,EAAY8C,QAAQC,MAAM,CACxBC,OAAQ,UAWRY,IAAK5D,MAET,cAAC,IAAD,CAAOE,QAASA,EAASiB,WAAYjC,EAAOoC,YAAY,EACxDlD,QAASA,EACTgD,OAAO,KACPyC,0BAA0B,EAC1BC,OAAQ,CAAEC,EAAG,QACbC,WAAYC,YAAM,CAChBC,OAAQ,c,UEvFT,SAASG,KACd,IAAMvB,EAAUnD,YAAYrF,GACtBwF,EAAWC,cAOjB,OACE,cAAC,IAAD,CACEmD,MAAO,CACLoB,SAAU,SACVJ,OAAQ,QACRK,SAAU,QACV7C,MAAO,QACP8C,KAAM,GAERC,QAdgB,SAAC5B,GACnB6B,QAAQC,IAAI9B,GACZ/C,EAAS7F,EAAK4I,EAAEzC,OAadwE,oBAAqB,CAAC9B,GACtB+B,KAAK,SAVP,SAWKtF,EAAO/B,KAAI,SAAAF,GAAC,OAAI,cAAC,IAASwH,KAAV,UACf,cAAC,KAAD,CAAMC,GAAIzH,EAAEvD,KAAZ,SACGuD,EAAEkC,OADkB,OAAOlC,EAAEvD,OADG,OAAOuD,EAAEvD,W,aC5BvC,SAASiL,KACtB,OACE,uC,ICMIC,GAAmBC,IAAnBD,MAAOE,GAAYD,IAAZC,QAsBAC,OApBf,WACE,OACE,eAAC,IAAD,WACE,cAACH,GAAD,UACE,cAACZ,GAAD,MAEF,cAAC,IAAD,UACE,cAACc,GAAD,CAASjC,MAAO,CAAEmC,QAAS,QAA3B,SACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,OAAK,EAACvL,KAAK,IAAI0F,UAAWuF,KAChCzF,EAAO/B,KAAI,SAAAF,GAAC,OAAI,cAAC,KAAD,CAAOgI,OAAK,EAACvL,KAAMuD,EAAEvD,KAAM0F,UAAWnC,EAAEmC,WAAgB,KAAKnC,EAAEvD,sBChBjFwL,GAAQC,YAAe,CAClCC,QAAS,CACPlL,KAAMmL,EACN9G,MAAO+G,EACPrG,KAAMsG,KCGUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAAS7F,OACP,cAAC,IAAM8F,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,UAINa,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrL,MAAK,SAACsL,GAClCA,EAAaC,kB","file":"static/js/main.2281719c.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  path: '/'\r\n}\r\n\r\nexport const menuSlice = createSlice({\r\n  name: 'menu',\r\n  initialState,\r\n  reducers: {\r\n    goto: (state, action) => {\r\n      state.path = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { goto } = menuSlice.actions\r\n\r\nexport const currentMenu = (state) => state.menu.path\r\n\r\nexport default menuSlice.reducer","import _ from 'lodash';\r\nimport { getItems, getQuestLv, getQuestQuery, getQuestRewards } from './const_query';\r\nconst initSqlJs = require('sql.js');\r\nlet _db = undefined;\r\n\r\nasync function getDB() {\r\n  if (_db !== undefined) return _db\r\n  const sqlPromise = initSqlJs({\r\n    locateFile: file => `/${file}`\r\n  });\r\n  const dataPromise = fetch(\"/mhxx.db\").then(res => res.arrayBuffer());\r\n  const [SQL, buf] = await Promise.all([sqlPromise, dataPromise])\r\n  _db = new SQL.Database(new Uint8Array(buf));\r\n\r\n  return _db\r\n}\r\n\r\nexport function getQuestsFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let quests = {}\r\n    db.each(getQuestQuery,\r\n        (r) => { quests[r.id] = r },\r\n        () => {\r\n          let rewards = []\r\n          db.each(getQuestRewards, \r\n              (r) => rewards.push(r), () => {\r\n                let nr = _.reduce(rewards, (p, c) => {\r\n                  var qid = p[c.id] = p[c.id] || {A: [], B: [], C: [], D: []}\r\n                  var type = qid[c.type] = qid[c.type] || []\r\n\r\n                  type.push(_.omit(c, 'id'))\r\n\r\n                  return p\r\n                }, {})\r\n                \r\n                let result = _.chain(quests).mapValues(v => {\r\n                  v.rewards = _.zipWith(\r\n                                _.chain(nr[v.id].A).map(v => _.mapKeys(v, (_, k) => k + '_A')).value(), \r\n                                _.chain(nr[v.id].B).map(v => _.mapKeys(v, (_, k) => k + '_B')).value(), \r\n                                _.chain(nr[v.id].C).map(v => _.mapKeys(v, (_, k) => k + '_C')).value(), \r\n                                (a,b,c) => {\r\n                                  return _.merge(a,b,c)\r\n                                })\r\n                  return v\r\n                }).values().value()\r\n\r\n                resolve(result)\r\n              })\r\n        })\r\n    \r\n  })\r\n}\r\n\r\nexport function getQuestLvFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let lvs = []\r\n    db.each(getQuestLv,\r\n      (r) => lvs.push(r.lv), \r\n      () => resolve(lvs))\r\n  })\r\n}\r\n\r\nexport function getItemsFromDB() {\r\n  return new Promise(async (resolve, reject) => {\r\n    const db = await getDB()\r\n    let items = []\r\n    db.each(getItems, \r\n      (r) => items.push(r), \r\n      () => resolve(items))\r\n  })\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getQuestsFromDB, getQuestLvFromDB } from '../../app/db';\r\n\r\nconst initialState = {\r\n  quests: [],\r\n  levels: [],\r\n  loading: false\r\n}\r\n\r\nexport const getQuestAsync = createAsyncThunk(\r\n  'quests/getQuest',\r\n  async () => {\r\n    const quests = await getQuestsFromDB()\r\n\r\n    return quests\r\n  }\r\n)\r\n\r\nexport const getQuestLvAsync = createAsyncThunk(\r\n  'quests/getQuestLv',\r\n  async () => {\r\n    const lvs = await getQuestLvFromDB()\r\n\r\n    return lvs\r\n  }\r\n)\r\n\r\nexport const questSlice = createSlice({\r\n  name: 'quest',\r\n  initialState,\r\n  reducers: {\r\n    getQuests: (state) => {\r\n      state.quests = []\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getQuestAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getQuestLvAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getQuestAsync.fulfilled, (state, action) => {\r\n        state.quests = action.payload\r\n        state.loading = false\r\n      })\r\n      .addCase(getQuestLvAsync.fulfilled, (state, action) => {\r\n        state.levels = action.payload\r\n        state.loading = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const {getQuests}  = questSlice.actions\r\n\r\nexport const questList = (state) => state.quest.quests\r\nexport const questLv = (state) => state.quest.levels\r\nexport const isLoading = (state) => state.quest.loading\r\n\r\nexport default questSlice.reducer","export const getQuestQuery = `\r\nSELECT \r\n  Q.Qst_ID AS id,\r\n  QN.Qst_Name_4 AS ko, QN.Qst_Name_0 AS en, QN.Qst_Name_3 AS jp,\r\n  Q.QstTalk AS talk, QL.Qst_Lv_4 AS lv, QK.Qst_Key_4 AS key, QT.Qst_Type_4 AS type,\r\n  LN.Loc_Name_4 AS map, G.Qst_Goal_4 AS goal, G2.Qst_Goal2_4 AS goal2,\r\n  Q.Time AS time, Q.Fee AS contract, Q.Reward AS reward,\r\n  Q.HRP AS hrp, Q.Reward2 AS reward2, Q.HRP2 AS hrp2,\r\n  MN1.Mon_Name_4 AS mon1, MN2.Mon_Name_4 AS mon2,\r\n  MN3.Mon_Name_4 AS mon3, MN4.Mon_Name_4 AS mon4, MN5.Mon_Name_4 AS mon5,\r\n  MN6.Mon_Name_4 AS mon6, MN7.Mon_Name_4 AS mon7, MN8.Mon_Name_4 AS mon8\r\nFROM DB_Qst AS Q \r\n  INNER JOIN ID_Qst_Name AS QN ON QN.Qst_ID = Q.Qst_ID \r\n  INNER JOIN ID_Qst_Lv AS QL ON QL.Qst_Lv_ID = Q.Qst_Lv_ID\r\n  INNER JOIN ID_Qst_Key AS QK ON QK.Qst_Key_ID = Q.Qst_Key_ID\r\n  INNER JOIN ID_Qst_Type AS QT ON QT.Qst_Type_ID = Q.Qst_Type_ID\r\n  INNER JOIN ID_Loc_Name AS LN ON LN.Loc_ID = Q.Loc_ID\r\n  INNER JOIN ID_Qst_Goal AS G ON G.Qst_ID = Q.Qst_ID\r\n  INNER JOIN ID_Qst_Goal2 AS G2 ON G2.Qst_ID = Q.Qst_ID\r\n  INNER JOIN ID_Mon_Name AS MN1 ON MN1.Mon_ID = Q.Mon1_ID\r\n  INNER JOIN ID_Mon_Name AS MN2 ON MN2.Mon_ID = Q.Mon2_ID\r\n  INNER JOIN ID_Mon_Name AS MN3 ON MN3.Mon_ID = Q.Mon3_ID\r\n  INNER JOIN ID_Mon_Name AS MN4 ON MN4.Mon_ID = Q.Mon4_ID\r\n  INNER JOIN ID_Mon_Name AS MN5 ON MN5.Mon_ID = Q.Mon5_ID\r\n  INNER JOIN ID_Mon_Name AS MN6 ON MN6.Mon_ID = Q.Mon6_ID\r\n  INNER JOIN ID_Mon_Name AS MN7 ON MN7.Mon_ID = Q.Mon7_ID\r\n  INNER JOIN ID_Mon_Name AS MN8 ON MN8.Mon_ID = Q.Mon8_ID`\r\n\r\nexport const getQuestRewards = `\r\nSELECT\r\n  IQ.Qst_ID AS id, IQ.ID AS key_id, Itm_Name_4 AS ko, Itm_Name_3 AS jp, \r\n  Itm_Name_0 AS en, IQ.Qty AS qty, IQ.Pct as percent, IQ.Type AS type\r\nFROM DB_ItmtoQst AS IQ \r\n  INNER JOIN ID_Itm_Name AS I ON I.Itm_ID = IQ.Itm_ID`\r\n\r\nexport const getQuestLv = `\r\nSELECT \r\n  DISTINCT QL.Qst_Lv_4 AS lv \r\nFROM DB_Qst AS Q\r\n  INNER JOIN ID_Qst_Lv AS QL ON QL.Qst_Lv_ID = Q.Qst_Lv_ID\r\n  ORDER BY Q.Qst_Lv_ID`\r\n\r\nexport const getItems = `\r\nSELECT \r\n\tITN.Itm_Name_4 AS ko, ITN.Itm_Name_3 AS jp, ITN.Itm_Name_0 AS en,\r\n\tI.Rare AS rare, I.Max AS max, I.Sell AS sell, I.Buy AS buy\r\nFROM DB_Itm AS I\r\n\tINNER JOIN ID_Itm_Name AS ITN ON ITN.Itm_ID = I.Itm_ID`","import { Popover, Space, Table, Tag } from \"antd\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getQuestAsync, getQuestLvAsync, isLoading, questList, questLv } from \"./questSlice\"\r\nimport { VList } from 'virtual-table-ant-design'\r\nimport Search from \"antd/lib/input/Search\"\r\nimport { useHotkeys } from 'react-hotkeys-hook'\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nlet lastIndex = 0\r\nconst updateIndex = () => {\r\n  lastIndex++\r\n  return lastIndex\r\n}\r\n\r\nexport default function Quest() {\r\n  const o_quests = useSelector(questList)\r\n  const [quests, setQuest] = useState(o_quests)\r\n  const loading = useSelector(isLoading)\r\n  const levels = useSelector(questLv)\r\n  const dispatch = useDispatch()\r\n  const searchInput = useRef()\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: '',\r\n      key: `detail${updateIndex()}`,\r\n      render: (_, r) => {\r\n        let rewardColumns = [\r\n          {\r\n            title: '메인퀘스트 보수 첫째 줄',\r\n            key: `detail_A${updateIndex()}`,\r\n            children: [\r\n              {\r\n                title: '아이템', \r\n                key: `item_A${updateIndex()}`,\r\n                render: (_, r) => \r\n                  <Space direction=\"vertical\">\r\n                    <Text>{r.ko_A}</Text>\r\n                    <Text type=\"secondary\">{r.jp_A}</Text>\r\n                  </Space>\r\n              },\r\n              {\r\n                title: '수량',\r\n                key: `qty_A${updateIndex()}`,\r\n                dataIndex: 'qty_A'\r\n              },\r\n              {\r\n                title: '확률',\r\n                key: `percent_A${updateIndex()}`,\r\n                dataIndex: 'percent_A'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '메인퀘스트 보수 둘째 줄',\r\n            key: `detail_B${updateIndex()}`,\r\n            children: [\r\n              {\r\n                title: '아이템', \r\n                key: `item_B${updateIndex()}`,\r\n                render: (_, r) => \r\n                  <Space direction=\"vertical\">\r\n                    <Text>{r.ko_B}</Text>\r\n                    <Text type=\"secondary\">{r.jp_B}</Text>\r\n                  </Space>\r\n              },\r\n              {\r\n                title: '수량',\r\n                key: `qty_B${updateIndex()}`,\r\n                dataIndex: 'qty_B'\r\n              },\r\n              {\r\n                title: '확률',\r\n                key: `percent_B${updateIndex()}`,\r\n                dataIndex: 'percent_B'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '서브퀘스트 보수',\r\n            key: `detail_C${updateIndex()}`,\r\n            children: [\r\n              {\r\n                title: '아이템', \r\n                key: `item_C${updateIndex()}`,\r\n                render: (_, r) => \r\n                  <Space direction=\"vertical\">\r\n                    <Text>{r.ko_C}</Text>\r\n                    <Text type=\"secondary\">{r.jp_C}</Text>\r\n                  </Space>\r\n              },\r\n              {\r\n                title: '수량',\r\n                key: `qty_C${updateIndex()}`,\r\n                dataIndex: 'qty_C'\r\n              },\r\n              {\r\n                title: '확률',\r\n                key: `percent_C${updateIndex()}`,\r\n                dataIndex: 'percent_C'\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '메인퀘스트 보수 셋째 줄',\r\n            key: `detail_D${updateIndex()}`,\r\n            children: [\r\n              {\r\n                title: '아이템', \r\n                key: `item_D${updateIndex()}`,\r\n                render: (_, r) => \r\n                  <Space direction=\"vertical\">\r\n                    <Text>{r.ko_D}</Text>\r\n                    <Text type=\"secondary\">{r.jp_D}</Text>\r\n                  </Space>\r\n              },\r\n              {\r\n                title: '수량',\r\n                key: `qty_D${updateIndex()}`,\r\n                dataIndex: 'qty_D'\r\n              },\r\n              {\r\n                title: '확률',\r\n                key: `percent_D${updateIndex()}`,\r\n                dataIndex: 'percent_D'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n        \r\n      \r\n        return (<Popover title=\"퀘스트 보수\" content={\r\n            <Table\r\n              dataSource={r.rewards} \r\n              columns={rewardColumns} \r\n              rowKey={() => `prow${updateIndex()}`} \r\n              size=\"small\" \r\n              pagination={false}/>} \r\n            placement=\"right\"\r\n            trigger=\"hover\" >\r\n          <InfoCircleOutlined />\r\n        </Popover>)\r\n      },\r\n      width: 30\r\n    },\r\n    {\r\n      title: '레벨',\r\n      key: `lv${updateIndex()}`,\r\n      dataIndex: 'lv',\r\n      filters: levels.map(v => {\r\n        return {\r\n          text: v,\r\n          value: v\r\n        }\r\n      }),\r\n      width: 120,\r\n      onFilter: (value, record) => record.lv.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: '퀘스트',\r\n      key: `name${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <div>\r\n          <Tag color=\"green\">{r.type}</Tag>\r\n          { r.key && <Tag color=\"red\">{r.key}</Tag> }\r\n          { r.talk !== 0 && <Tag color=\"gold\">대화</Tag> }\r\n        </div>\r\n        <Text>{r.ko}</Text>\r\n        <Text type=\"secondary\">{r.jp}</Text>\r\n      </Space>,\r\n      filters: [\r\n        {text: '긴급', value: '긴급' },\r\n        {text: '키', value: '키' }\r\n      ],\r\n      onFilter: (value, record) => record.key === value\r\n    },\r\n    {\r\n      title: '맵',\r\n      key: `map${updateIndex()}`,\r\n      dataIndex: 'map',\r\n      width: 150\r\n    },\r\n    {\r\n      title: '메인 타겟',\r\n      key: `goal${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.goal}</Text>\r\n        <Text type=\"secondary\">보수: {r.reward}z / {r.reward / 10}pt / {r.hrp}HRP</Text>\r\n      </Space>,\r\n      width: 500,\r\n      responsive: ['xxl']\r\n    },\r\n    {\r\n      title: '서브 타겟',\r\n      key: `goal2${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.goal2}</Text>\r\n        { r.goal2 !== '없음' && <Text type=\"secondary\">보수: {r.reward2}z / {r.reward2 / 10}pt / {r.hrp2}HRP</Text> }\r\n        \r\n      </Space>,\r\n      width: 500,\r\n      responsive: ['xxl']\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuestLvAsync())\r\n    dispatch(getQuestAsync())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    setQuest(o_quests)\r\n  }, [o_quests])\r\n\r\n  const onSearch = (value) => {\r\n    setQuest(o_quests.filter(v => v.ko.includes(value)))\r\n  }\r\n  useHotkeys('ctrl+f', (e) => {\r\n    searchInput.current.focus({\r\n      cursor: 'all',\r\n    })\r\n    e.preventDefault();  \r\n  });\r\n  const onKeyDownSearch = (e) => {\r\n    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {        \r\n        e.preventDefault();         \r\n        searchInput.current.focus({\r\n          cursor: 'all',\r\n        })   \r\n    }    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Search placeholder=\"퀘스트 명 검색\" \r\n          allowClear onSearch={onSearch} style={{ width: 400 }} \r\n          onKeyDown={onKeyDownSearch}\r\n          ref={searchInput}/>\r\n      </Space>\r\n      <Table columns={columns} dataSource={quests} pagination={false} \r\n      loading={loading}\r\n      rowKey='id' \r\n      scrollToFirstRowOnChange={true}\r\n      scroll={{ y: '80vh' }}\r\n      components={VList({\r\n        height: 1000,\r\n      })}/>\r\n    </>\r\n  )\r\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { getItemsFromDB } from '../../app/db';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n}\r\n\r\nexport const getItemsAsync = createAsyncThunk(\r\n  'quests/getQuest',\r\n  async () => {\r\n    const quests = await getItemsFromDB()\r\n\r\n    return quests\r\n  }\r\n)\r\n\r\nexport const itemSlice = createSlice({\r\n  name: 'item',\r\n  initialState,\r\n  reducers: {\r\n    getItems: (state) => {\r\n      state.items = []\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getItemsAsync.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getItemsAsync.fulfilled, (state, action) => {\r\n        state.items = action.payload\r\n        state.loading = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const { getItems }  = itemSlice.actions\r\n\r\nexport const itemList = (state) => state.item.items\r\nexport const isLoading = (state) => state.item.loading\r\n\r\nexport default itemSlice.reducer","import { Popover, Space, Table, Tag } from \"antd\"\r\nimport Text from \"antd/lib/typography/Text\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { VList } from 'virtual-table-ant-design'\r\nimport Search from \"antd/lib/input/Search\"\r\nimport { useHotkeys } from 'react-hotkeys-hook'\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport { getItemsAsync, isLoading, itemList } from \"./itemSlice\"\r\n\r\nlet lastIndex = 0\r\nconst updateIndex = () => {\r\n  lastIndex++\r\n  return lastIndex\r\n}\r\n\r\nexport default function Quest() {\r\n  const o_items = useSelector(itemList)\r\n  const [items, setItems] = useState(o_items)\r\n  const loading = useSelector(isLoading)\r\n  const dispatch = useDispatch()\r\n  const searchInput = useRef()\r\n\r\n  const columns = [\r\n    {\r\n      title: '아이템',\r\n      key: `item${updateIndex()}`,\r\n      render: (_, r) => <Space direction=\"vertical\">\r\n        <Text>{r.ko}</Text>\r\n        <Text type=\"secondary\">{r.jp}</Text>\r\n      </Space>,\r\n    },\r\n    {\r\n      title: '레어도',\r\n      key: `rare${updateIndex()}`,\r\n      dataIndex: 'rare'\r\n    },\r\n    {\r\n      title: '최대 소지 수',\r\n      key: `max${updateIndex()}`,\r\n      dataIndex: 'max'\r\n    },\r\n    {\r\n      title: '판매가',\r\n      key: `sell${updateIndex()}`,\r\n      dataIndex: 'sell'\r\n    },\r\n    {\r\n      title: '구매가',\r\n      key: `buy${updateIndex()}`,\r\n      dataIndex: 'buy'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getItemsAsync())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    setItems(o_items)\r\n  }, [o_items])\r\n\r\n  const onSearch = (value) => {\r\n    setItems(o_items.filter(v => v.ko.includes(value)))\r\n  }\r\n  useHotkeys('ctrl+f', (e) => {\r\n    searchInput.current.focus({\r\n      cursor: 'all',\r\n    })\r\n    e.preventDefault();  \r\n  });\r\n  const onKeyDownSearch = (e) => {\r\n    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {        \r\n        e.preventDefault();         \r\n        searchInput.current.focus({\r\n          cursor: 'all',\r\n        })   \r\n    }    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Search placeholder=\"아이템 명 검색\" \r\n          allowClear onSearch={onSearch} style={{ width: 400 }} \r\n          onKeyDown={onKeyDownSearch}\r\n          ref={searchInput}/>\r\n      </Space>\r\n      <Table columns={columns} dataSource={items} pagination={false} \r\n      loading={loading}\r\n      rowKey='id' \r\n      scrollToFirstRowOnChange={true}\r\n      scroll={{ y: '80vh' }}\r\n      components={VList({\r\n        height: 1000,\r\n      })}/>\r\n    </>\r\n  )\r\n}","import Quest from \"../features/quest/Quest\";\r\nimport Item from '../features/item/Item';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/quests',\r\n    label: '퀘스트',\r\n    component: Quest\r\n  },\r\n  {\r\n    path: '/items',\r\n    label: '아이템',\r\n    component: Item\r\n  }\r\n]\r\n\r\nexport default routes;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { currentMenu, goto } from \"./menuSlice\";\r\nimport {Menu as AntdMenu} from \"antd\";\r\nimport routes from \"../../app/router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport function Menu() {\r\n  const current = useSelector(currentMenu);\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (e) => {\r\n    console.log(e)\r\n    dispatch(goto(e.key))\r\n  }\r\n\r\n  return (\r\n    <AntdMenu \r\n      style={{\r\n        overflow: 'hidden',\r\n        height: '100vh',\r\n        position: 'fixed',\r\n        width: '201px',\r\n        left: 0,\r\n      }}\r\n      onClick={handleClick}\r\n      defaultSelectedKeys={[current]}\r\n      mode=\"inline\">\r\n        {routes.map(v => <AntdMenu.Item key={'mitm'+v.path}>\r\n          <Link to={v.path} key={'link'+v.path}>\r\n            {v.label}\r\n          </Link>\r\n        </AntdMenu.Item>)}\r\n    </AntdMenu>\r\n  )\r\n}","export default function Home() {\r\n  return (\r\n    <div>\r\n      Home\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { Layout } from 'antd';\nimport { Menu } from './features/menu/Menu';\nimport { Route, Switch } from 'react-router';\nimport Home from './features/home/Home';\nimport routes from './app/router';\nimport { HashRouter as Router } from 'react-router-dom'\n\nconst { Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <Layout>\n      <Sider>\n        <Menu/>\n      </Sider>\n      <Layout>\n        <Content style={{ padding: '24px' }}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              {routes.map(v => <Route exact path={v.path} component={v.component} key={'rt'+v.path}/> )}\n            </Switch>\n          </Router>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport menuReducer from '../features/menu/menuSlice';\nimport questReducer from '../features/quest/questSlice';\nimport itemReducer from '../features/item/itemSlice';\n\nexport const store = configureStore({\n  reducer: {\n    menu: menuReducer,\n    quest: questReducer,\n    item: itemReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}